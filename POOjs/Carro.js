const Veiculo = require('./Veiculo');

/**
 * Classe Carro - herda de Veiculo
 * Representa um carro espec√≠fico
 */
class Carro extends Veiculo {
    constructor(marca, modelo, ano, cor, numeroPortas, combustivel) {
        super(marca, modelo, ano, cor);
        this.numeroPortas = numeroPortas;
        this.combustivel = combustivel;
        this.arCondicionado = false;
        this.radio = false;
    }

    // Implementa√ß√£o do m√©todo abstrato buzinar
    buzinar() {
        if (!this.ligado) {
            console.log(`O ${this.modelo} precisa estar ligado para buzinar!`);
            return;
        }
        console.log(`${this.modelo}: *BIP BIP* üöó`);
    }

    // Implementa√ß√£o do m√©todo abstrato getTipo
    getTipo() {
        return 'Carro';
    }

    // Implementa√ß√£o do m√©todo abstrato getCapacidadePassageiros
    getCapacidadePassageiros() {
        return this.numeroPortas === 2 ? 4 : 5;
    }

    // M√©todo espec√≠fico da classe Carro
    ligarArCondicionado() {
        if (!this.ligado) {
            console.log(`O ${this.modelo} precisa estar ligado para ligar o ar condicionado!`);
            return;
        }
        
        this.arCondicionado = true;
        console.log(`Ar condicionado do ${this.modelo} foi ligado! ‚ùÑÔ∏è`);
    }

    // M√©todo espec√≠fico da classe Carro
    desligarArCondicionado() {
        this.arCondicionado = false;
        console.log(`Ar condicionado do ${this.modelo} foi desligado!`);
    }

    // M√©todo espec√≠fico da classe Carro
    ligarRadio() {
        if (!this.ligado) {
            console.log(`O ${this.modelo} precisa estar ligado para ligar o r√°dio!`);
            return;
        }
        
        this.radio = true;
        console.log(`R√°dio do ${this.modelo} foi ligado! üéµ`);
    }

    // M√©todo espec√≠fico da classe Carro
    desligarRadio() {
        this.radio = false;
        console.log(`R√°dio do ${this.modelo} foi desligado!`);
    }

    // Sobrescrevendo o m√©todo getInfo para incluir informa√ß√µes espec√≠ficas do carro
    getInfo() {
        const infoBase = super.getInfo();
        return {
            ...infoBase,
            tipo: this.getTipo(),
            numeroPortas: this.numeroPortas,
            combustivel: this.combustivel,
            capacidadePassageiros: this.getCapacidadePassageiros(),
            arCondicionado: this.arCondicionado,
            radio: this.radio
        };
    }

    // M√©todo espec√≠fico para abastecer
    abastecer(litros) {
        console.log(`${this.modelo} foi abastecido com ${litros} litros de ${this.combustivel} ‚õΩ`);
    }
}

module.exports = Carro;
